-- 1. Создать хранимую процедуру, которая выполняет арифметическую операцию
-- над полями таблицы по вводимому параметру процедуры.
DELIMITER //

CREATE PROCEDURE UpdateSeatingCapacity(IN multiplier FLOAT)
BEGIN
    UPDATE airplane SET seats = seats * multiplier;
END //

DELIMITER ;

-- 2. Создать хранимую процедуру, которая возвращает связанные записи нескольких
-- таблиц. 
DELIMITER //

CREATE PROCEDURE GetDepartureInfo()
BEGIN
    select d.date, d.departureTime, d. arrivalTime, a.seats, m.name
    from departures d 
    join airplane a on d.idairplane = a.idairplane
    join mark m on m.idmark = a.idmark;
END //

DELIMITER ;

-- 3. Создать хранимую процедуру, вычисляющую агрегированные характеристики
-- записей таблицы (например, минимальное, максимальное и среднее значение
-- некоторых полей).
DELIMITER //

CREATE PROCEDURE GetPlaneSpeed()
BEGIN
    select avg(speed), max(speed), min(speed) from airplane;
END //

DELIMITER ;

-- 4. Создать функцию, использующую конструкцию CASE (например,
-- преобразование номера дня недели в текст), вывести результат выполнения
-- функции в запросе. 
DELIMITER //

CREATE FUNCTION DayOfWeekName(dayNumber INT) 
RETURNS VARCHAR(20)
DETERMINISTIC 
NO SQL 
BEGIN
    RETURN CASE dayNumber
        WHEN 1 THEN 'Понедельник'
        WHEN 2 THEN 'Вторник'
        WHEN 3 THEN 'Среда'
        WHEN 4 THEN 'Четверг'
        WHEN 5 THEN 'Пятница'
        WHEN 6 THEN 'Суббота'
        WHEN 7 THEN 'Воскресенье'
        ELSE 'Неизвестно'
    END;
END//

DELIMITER ;

-- 5. Создайте курсор для вывода записей из таблицы, удовлетворяющих заданному
-- условию.
DELIMITER //

CREATE PROCEDURE GetCrewAdmissionGroup(in group_condition INT)
BEGIN
DECLARE done INT DEFAULT FALSE;
declare crew_group INT;
declare crew_id int default 0;
declare cur cursor for select idcrew, idadmissiongroup from crewInfo;

DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
open cur;
 read_loop: LOOP
	fetch cur into crew_id, crew_group;
    if done then
		leave read_loop;
    end if;
    if (crew_group <=> group_condition) then
		select crew_id, crew_group;
    end if;
 end loop;
close cur;
END

DELIMITER ;

-- 1
select * from airplane;
CALL UpdateSeatingCapacity(1.1);
select * from airplane;
-- 2
call GetDepartureInfo();
-- 3
call GetPlaneSpeed();
-- 4
SELECT DayOfWeekName(1) AS DayName;
-- 5 
call GetCrewAdmissionGroup(1);
